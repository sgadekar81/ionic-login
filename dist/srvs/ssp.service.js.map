{"version":3,"sources":["../../srvs/ssp.service.ts"],"names":[],"mappings":"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","file":"ssp.service.js","sourceRoot":"","sourcesContent":["//ssp social server part\r\n// this part includes \r\n// request social server for getting access token //this part is already done by facebook and google cordova ionic plugins//in future can think of removing these dependency\r\n// from that access token get user public profile\r\n// _fb=>facebook _ggp=>googleplus\r\n// work for improved error handling\r\nimport { Injectable } from '@angular/core';\r\nimport { Uris } from '../classes/uris';\r\nimport { Facebook } from '@ionic-native/facebook';\r\nimport { GooglePlus } from '@ionic-native/google-plus';\r\nimport { RestService } from 'angularx-restful/srv/rest.service';\r\nimport { RestParams } from 'angularx-restful/classes/rest-params';\r\nimport { ProfileStabilizer } from './profile-stabilizer.service';\r\n\r\n\r\nexport class Ssp {\r\n    constructor(private _rst:RestService,private _fb:Facebook,private _ggp:GooglePlus,private _profileStabilizer:ProfileStabilizer){}\r\n    lCircular:any;\r\n    execute(_circular:any,success:Function, error:Function){\r\n        this.setLcircular(_circular,success, error);\r\n        switch(_circular.loginType){\r\n            case 'facebook': return this.fbLogin();\r\n            case 'google': return this.ggpLogin();\r\n        }\r\n    }\r\n    private get_fbProfile(response:any){\r\n        this.lCircular.params = new RestParams();\r\n        this.lCircular.params.uri = Uris.getFbProfile+response.authResponse.accessToken\r\n        this.getProfile(this.lCircular.params).subscribe((fbProfile)=>{\r\n            this.stabilizeProfile(fbProfile)\r\n        })\r\n    }\r\n    private getProfile(restParams:RestParams){\r\n        return this._rst.get(restParams).map((response)=>{\r\n            return JSON.parse(response._body);\r\n        },(err:any)=>{\r\n            return err;\r\n        })\r\n    }\r\n    \r\n    private setLcircular(_circular:any,success:Function, error:Function){\r\n        this.lCircular = new Object();\r\n        this.lCircular.success = success;\r\n        this.lCircular.error = error;\r\n        this.lCircular._circular = _circular;\r\n    }\r\n    // this method stabilizes profile and emit output\r\n    stabilizeProfile(profile:any){\r\n        let stabilizedProfile = this._profileStabilizer.getStabilizedProfile(this.lCircular._circular, profile);\r\n        this.emitOutput(stabilizedProfile);\r\n    }\r\n    private emitOutput(profile:any){\r\n        // this gives profile back to its caller\r\n        this.lCircular.success(profile);\r\n    }\r\n    fbLogin(){\r\n        this._fb.login(['public_profile', 'email']).then((authResponse=>{\r\n            this.get_fbProfile(authResponse)\r\n        }),(err:any)=>{\r\n            this.lCircular._circular.error(err);\r\n        });\r\n    }\r\n    ggpLogin(){\r\n        this._ggp.login({}).then((googleProfile=>{\r\n            this.stabilizeProfile(googleProfile);\r\n        }),(err:any)=>{\r\n            this.lCircular._circular.error(err);\r\n        });\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RestService, },\n{type: Facebook, },\n{type: GooglePlus, },\n{type: ProfileStabilizer, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}