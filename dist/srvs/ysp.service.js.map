{"version":3,"sources":["../../srvs/ysp.service.ts"],"names":[],"mappings":"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","file":"ysp.service.js","sourceRoot":"","sourcesContent":["// ysp your server part\r\n// this part includes \r\n// request your server for access token\r\n// by using this token u do calls on your server like getProfile/profileId and that token in request header that implies requesting user is autherized\r\n\r\n\r\n// /api/justbe/generateJusteBeToken\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Uris } from '../classes/uris';\r\nimport { JustbeProfile } from '../classes/justbe/justbe-profile';\r\nimport { RestService } from 'angularx-restful/srv/rest.service';\r\nimport { RestParams } from 'angularx-restful/classes/rest-params';\r\nimport { IonicModalHelperSrv } from 'ionic-modal-helper/ionic-modal-helper.service';\r\nimport { EmailGetterComponent } from '../components/email-getter/email-getter';\r\n\r\nexport class Ysp {\r\n    constructor(private _rst:RestService,\r\n    private _ionicModalHelperSrv:IonicModalHelperSrv\r\n    ){}\r\n    lCircular:any;\r\n    execute(_circular:any,success:Function, error:Function){\r\n        this.setLcircular(_circular,success, error);\r\n\r\n        // profile iamge related\r\n        // this section is all related to what to do after i got profile\r\n        // so social sites gives images of account in profile that we got from ssp\r\n        // so we need to upload that image to our server and after successfull upload server responds us with image url which is on our server\r\n        // so this image url i have to give in json of just be profile\r\n        // but whenever user logs in this cycle repeats means with every login we are uploading a image which is ideally not good\r\n\r\n        // do here image related stuff\r\n        \r\n        // this._imageMan.execute(success,error);\r\n\r\n        this.lCircular.justbeProfile = new JustbeProfile(_circular,this.lCircular);\r\n        if(this.validation(this.lCircular.justbeProfile)){\r\n            this.getJustbeAccessToken(this.lCircular.params)\r\n            .subscribe((justbeAccessToken:any)=>{\r\n                this.lCircular.success(justbeAccessToken);\r\n            })\r\n        }else{\r\n            this._ionicModalHelperSrv.raiseModal(EmailGetterComponent,{afterSelectEmail:this.afterEmailSelect.bind(this)})\r\n        }\r\n    }\r\n    private setLcircular(_circular:any,success:Function, error:Function){\r\n        this.lCircular = new Array();\r\n        this.lCircular.success = success;\r\n        this.lCircular.error = error;\r\n        this.lCircular._circular = _circular;\r\n        this.lCircular.params = new RestParams();\r\n        this.lCircular.params.uri = Uris.genJustbeAccessToken;\r\n    }\r\n    private getJustbeAccessToken(restParams:RestParams){\r\n        restParams.payload = this.lCircular.justbeProfile;\r\n        return this._rst.post(restParams).map((res:any)=>{\r\n            return JSON.parse(res._body);\r\n        },(err:any)=>{\r\n            this.lCircular._circular.error(err);\r\n        })\r\n    }\r\n    private validation(justbeProfile:JustbeProfile){\r\n        return justbeProfile.profileVO.emails.length>0 ? true : false\r\n    }\r\n    private afterEmailSelect(email:string){\r\n        this.lCircular.params.payload.justbeProfile.profileVO.emails.push(email);\r\n        this.getJustbeAccessToken(this.lCircular.params)\r\n            .subscribe((justbeAccessToken:any)=>{\r\n                this.lCircular.success(justbeAccessToken);\r\n            })\r\n    }\r\n    \r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RestService, },\n{type: IonicModalHelperSrv, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}