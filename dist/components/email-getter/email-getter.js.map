{"version":3,"sources":["../../../components/email-getter/email-getter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC1C,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC1C,OAAO,EAAE,mBAAA,EAAoB,MAAO,+CAAA,CAAgD;AAEpF;IAIE,8BAAmB,UAAqB,EAAS,oBAAwC;QAAtE,eAAU,GAAV,UAAU,CAAW;QAAS,yBAAoB,GAApB,oBAAoB,CAAoB;QACvF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAA;IACxC,CAAC;IACD,4CAAa,GAAb,UAAc,KAAY;QACxB,EAAE,CAAA,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAA,CAAC;YACjC,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA,CAAC;gBAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;YACzC,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;YAC5F,CAAC;QACH,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QACvC,CAAC;IACH,CAAC;IACD,iDAAkB,GAAlB,UAAmB,KAAY;QAC7B,IAAI,EAAE,GAAG,wJAAwJ,CAAC;QAClK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAEI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,izBAmBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,EAH6F,CAG7F,CAAC;IACF,2BAAC;CAxDD,AAwDC,IAAA;SAxDY,oBAAoB","file":"email-getter.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { NavParams } from 'ionic-angular';\nimport { IonicModalHelperSrv } from 'ionic-modal-helper/ionic-modal-helper.service';\n\nexport class EmailGetterComponent {\n\n  validationMsg: string;\n  profile:any\n  constructor(public _navParams: NavParams,private _ionicModalHelperSrv:IonicModalHelperSrv) {\n    console.log(_navParams.data.afterSelectEmail);\n    console.log(_navParams.data.profile);\n    this.profile = _navParams.data.profile\n  }\n  onSubmitClick(email:string){\n    if(this.basicValidateEmail(email)){\n      if(this._navParams.data && this._navParams.data.afterSelectEmail){\n        this._navParams.data.afterSelectEmail(email);\n        this._ionicModalHelperSrv.closeModal();\n      }else{\n        console.error('pass callback function to component, what to do after clicking on submit');\n      }\n    }else{\n      this.validationMsg = 'Invalid Email';\n    }\n  }\n  basicValidateEmail(email:string){\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'email-getter',\n  template: `\n                <ion-header>\n  \n                </ion-header>\n                <ion-content padding>\n  \n                  <div style=\"text-align: center;\">\n                    <img [src]=\"profile.profileVO._images[0].imageUrl\"  style=\"width: 150px;\">\n                    <h1>{{profile.profileVO.firstName}} {{profile.profileVO.lastName}}</h1>\n                  </div>\n                  <ion-list>\n                    <ion-item>\n                      <ion-input type=\"text\" placeholder=\"enter your email\" [(ngModel)]=\"email\"></ion-input>\n                    </ion-item>\n                    <span style=\"color:red\">{{validationMsg}}</span>\n\n                  </ion-list>\n              <button ion-button (click)=\"onSubmitClick(email)\">Submit</button>\n              </ion-content>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NavParams, },\n{type: IonicModalHelperSrv, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}